<?xml version="1.0"?>
<project name="generatentriples, part of the DL Semnatic WMS project" default="all" basedir=".">

    <!-- Compiler Settings -->
    <property name="compile.debug" value="on"/>
    <property name="compile.debuglevel" value="lines,vars,source"/>
    <property name="compile.deprecation" value="on"/>
    <property name="modern.compiler" value="modern"/>
    <property name="classic.compiler" value="classic"/>
    <property name="build.compiler" value="${modern.compiler}"/>
    <property name="build.sysclasspath" value="ignore"/>

    <!-- Project directories -->
    <property name="src.dir" location="src"/>
    <property name="doc.dir" location="doc"/>
    <property name="lib.dir" location="../libs"/>
    <property name="olfslib.dir" location="../olfs/build/lib"/>
    <property name="resources.dir" location="resources"/>
    <property name="initialContent.dir" location="${resources.dir}/initialContent"/>
    
    <!-- Build Directories -->
    <property name="build.dir" location="build"/>
    <property name="build.classes" location="${build.dir}/classes"/>
    <property name="build.jar" location="${build.dir}/jar"/>
    <property name="build.src" location="${build.dir}/src"/>
    <property name="build.dist" location="${build.dir}/dist"/>
    <property name="build.dist.doc" location="${build.dist}/doc"/>
    <property name="build.dist.run" location="${build.dist}/run"/>
   
    <!-- Libraries -->
    <property name="junit.lib"   value="junit-4.4.jar"/>
    <property name="jdom.lib"    value="jdom-1.1.1.jar"/>
    <property name="servlet-api.lib" value="servlet-api-2.5.jar"/>
    <property name="slf4j.lib"            value="slf4j-api-1.6.1.jar"/>
    <property name="logback-core.lib"     value="logback-core-0.9.26.jar"/>
    <property name="logback-classic.lib"  value="logback-classic-0.9.26.jar"/>
    <property name="owlim.lib"            value="owlim-lite-5.4.jar"/>
    <property name="openrdf-sesame.lib"   value="openrdf-sesame-2.7.7-onejar.jar" />
    <property name="opendap-olfs-experiments.lib"    value="opendap-olfs-experiments.jar"/>
    <property name="commons-io.lib"        value="commons-io-2.4.jar"/>
    <property name="commons-cli.lib"        value="apache-commons-cli-1.2.jar"/>
    <property name="commons-httpclient.lib" value="apache-commons-httpclient-3.1.jar"/>
    <property name="commons-logging.lib"    value="apache-commons-logging-1.1.1.jar"/>
    <property name="commons-codec.lib"      value="apache-commons-codec-1.3.jar"/>
    <property name="commons-lang.lib"       value="apache-commons-lang-2.5.jar"/>
    <property name="serializer.lib"    value="xalan-2.7.1-serializer.jar"/>
    <property name="xalan.lib"         value="xalan-2.7.1-xalan.jar"/>
    <property name="xercesImpl.lib"    value="xalan-2.7.1-xercesImpl.jar"/>
    <property name="xercesXmlApis.lib" value="xalan-2.7.1-xml-apis.jar"/>
    <property name="xsltc.lib"         value="xalan-2.7.1-xsltc.jar"/>
    <property name="saxon9he.lib"  value="saxon9he.jar"/>
    <property name="catalina.lib"       value="catalina-6.0.14.jar"/>
    <property name="jsonld-java-sesame.lib"       value="jsonld-java-sesame-0.3.jar"/>

    <available classname="com.fortify.dev.ant.SourceanalyzerTask" property="fortify.present"/>
    <property name="sourceanalyzer.buildid" value="FortifyBuild"/>
    <property name="rules.dir" value="fortify"/>

    <!-- Library (class)paths -->
    <path id="wms.compile.classpath">
        <pathelement path="${build.classes}"/>
        <fileset dir="${lib.dir}">
            <include name="${servlet-api.lib}"/>
            <include name="${jdom.lib}"/>
            <include name="${junit.lib}"/>
            <include name="${commons-io.lib}"/>
            <include name="${commons-cli.lib}"/>
            <include name="${commons-httpclient.lib}"/>
            <include name="${commons-logging.lib}"/>
            <include name="${commons-codec.lib}"/>
            <include name="${commons-lang.lib}"/>
            <include name="${saxon9he.lib}"/>
            <include name="${catalina.lib}"/>
            <include name="${owlim.lib}"/>
            <include name="${openrdf-sesame.lib}"/>
            <include name="${jsonld-java-sesame.lib}"/>
            <include name="${slf4j.lib}"/>
            <include name="${logback-core.lib}"/>
            <include name="${logback-classic.lib}"/>
         </fileset>
        <fileset dir="${olfslib.dir}">
            <include name="${opendap-olfs-experiments.lib}"/>
        </fileset>
    </path>

   <!-- targets -->
    <target name="all" depends="build"/>

    <target name="clean" description="Clean up ALL build products.">
        <delete dir="${build.dir}"/>
    </target>

    <target name="init" description="Prepare all build directories.">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${build.src}"/>
        <mkdir dir="${build.dist}"/>
        <mkdir dir="${build.dist.doc}"/>
        <mkdir dir="${build.dist.run}"/>
        <mkdir dir="${build.jar}"/>
    </target>

    <target  name="PreProcessSourceCode" depends="init" description="Moves selected source code from the development tree into the build/src directory. The code text is filtered to update version numbers.">
        <copy todir="${build.src}" filtering="true">
            <fileset dir="${src.dir}">
                <include name="iri/**"/>
                <include name="option/**"/>
            </fileset>
        </copy>
    </target>

    <target name="build" depends="init,doc" description="Compile and Build the DL generatentriples.jar"  >
        <javac compiler="${build.compiler}" destdir="${build.classes}" debug="${compile.debug}" debuglevel="${compile.debuglevel}" > 
            <classpath refid="wms.compile.classpath"/>
            <src path="${build.src}"/>
        </javac>
        
        <jar destfile="${build.jar}/generatentriples.jar" basedir="${build.classes}" manifest="MANIFESTgeneratentriples.MF"> 
        </jar>
    </target>

     
   <target name="doc" depends="PreProcessSourceCode,IsJavaDocUpToDate" description="Builds JavaDoc for the DL WMS, if missing or out of date." unless="JavaDocIsUpToDate" >
        <javadoc destdir="${build.dist.doc}/javadoc" Author="true" Verbose="true" Version="true" failonerror="true" >
            <classpath refid="wms.compile.classpath"/>
            <packageset dir="${build.src}" defaultexcludes="yes"/>
        </javadoc>

        <copy todir="${build.dist.doc}" filtering="false" >
            <fileset dir="${doc.dir}">
                <exclude name="javadoc/**"/><!-- Exclude the javadoc directory in the ${doc.dir} dir -->
                <exclude name="_notes/**"/> <!-- Exclude the _notes directory in the ${doc.dir} dir -->
                <exclude name="xsl/**"/> <!-- Exclude the _notes directory in the ${doc.dir} dir -->
            </fileset>
        </copy>
        <copy todir="${build.dist.doc}/xsl" filtering="true" >
            <fileset dir="${doc.dir}/xsl" />
        </copy>
    </target>

    <target name="IsJavaDocUpToDate" description="Checks to see if the JavaDoc is out of date." >
        <uptodate property="JavaDocIsUpToDate" targetfile="${build.dist.doc}/generatentriple/index.html">
            <srcfiles dir="${src.dir}">
                <include name="generatentriple/**/*.java"/>
            </srcfiles>
        </uptodate>
    </target>

</project>
